.store-page {
  min-height: 100vh;
  background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
}

.store-hero {
  background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
  position: relative;
  overflow: hidden;
  padding: 80px 0;
  width: 100vw;
  margin-left: calc(-50vw + 50%);
  margin-right: calc(-50vw + 50%);

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="store-pattern" width="20" height="20" patternUnits="userSpaceOnUse"><circle cx="10" cy="10" r="2" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23store-pattern)"/></svg>');
    opacity: 0.3;
  }

  .store-icon {
    opacity: 0;
    animation: fadeInDown 0.8s ease forwards;
  }

  .store-hero-title {
    opacity: 0;
    font-size: 3.5rem;
    font-weight: 700;
    color: white;
    animation: fadeInUp 0.8s ease 0.2s both;
  }

  .store-hero-subtitle {
    opacity: 0;
    font-size: 1.25rem;
    color: rgba(255, 255, 255, 0.9);
    animation: fadeInUp 0.8s ease 0.4s both;
  }

  .hero-content {
    position: relative;
    z-index: 2;
  }
}

// Store Page Animations
.store-item-card {
  border: 1px solid $border-color;
  border-radius: 12px;
  box-shadow: 0 2px 8px $shadow-light;
  transition: $transition-fast;
  overflow: hidden;
  opacity: 0;
  transform: translateY(30px) scale(0.95);

  // Viewport-based animations
  &.animate-in {
    animation: slideInFromBottom 0.6s ease-out forwards;
  }

  &.animate-out {
    opacity: 0;
    transform: translateY(30px) scale(0.95);
  }

  &:hover {
    box-shadow: 0 8px 25px $shadow-medium;
    transform: translateY(-5px);
  }

  &.updating {
    transform: scale(0.98);
  }
}

// Store item placeholder styles
.store-item-placeholder {
  height: 100%;
  width: 100%;
  background-color: $light-color;
  display: flex;
  align-items: center;
  justify-content: center;
  color: $secondary-color;
  font-size: 1.2rem;
}

// Cart indicator badge styles
.cart-indicator-badge {
  position: absolute;
  top: 8px;
  right: 8px;
  background-color: $success-color;
  color: white;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 12px;
  font-weight: bold;
  z-index: 2;
}

// Product image container styles
.product-image-container {
  height: 200px;
  width: 100%;
  overflow: hidden;
  cursor: pointer;
  position: relative;
}

// Product image styles
.product-image {
  object-fit: cover;
  height: 100%;
  width: 100%;
  transition: transform 0.3s ease;
}

// Product title styles
.product-title {
  cursor: pointer;
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.3;
}

// Product price styles
.product-price {
  cursor: pointer;
  font-size: 1.1rem;
}

// Quantity controls container
.quantity-controls-container {
  transition: all 0.3s ease;
}

// Quantity controls gap
.quantity-controls {
  gap: 1rem;
}

// Quantity display styles
.quantity-display {
  transition: all 0.2s ease;
}

// Remove button styles
.remove-btn {
  transition: all 0.3s ease;
}

.product-image-container {
  .image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity $transition-slow;

    .overlay-content {
      color: white;
      font-weight: 600;
      text-align: center;
      transform: translateY(10px);
      transition: transform $transition-slow;
    }
  }

  &:hover {
    .image-overlay {
      opacity: 1;

      .overlay-content {
        transform: translateY(0);
      }
    }
  }
}

.product-title {
  color: $text-color;
  transition: color $transition-fast;

  &:hover {
    color: $primary-color;
  }
}

.product-price {
  transition: color $transition-fast;

  &:hover {
    color: $primary-hover !important;
  }
}

.add-to-cart-btn {
  transition: $transition-fast;
  font-weight: 600;

  &:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3);
  }
}

.quantity-controls {
  animation: slideInUp 0.3s ease-out;
}

// Quantity buttons use Bootstrap defaults with custom classes for sizing only

.quantity-display {
  min-width: 60px;
  text-align: center;
  font-weight: 600;
  padding: 8px 12px;
  background-color: $light-color;
  border-radius: 8px;
  border: 1px solid $border-color;
}

.remove-btn {
  transition: $transition-fast;

  &:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);
  }
}

// Loading animations
.store-loading {
  animation: pulse 1.5s ease-in-out infinite;
}

.store-loading-spinner {
  animation: spin 1s linear infinite;
}

.loading-animation-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.loading-dots {
  display: flex;
  gap: 8px;
  align-items: center;
  justify-content: center;

  .dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: $primary-color;
    animation: loadingDots 1.4s ease-in-out infinite both;

    &:nth-child(1) {
      animation-delay: -0.32s;
    }

    &:nth-child(2) {
      animation-delay: -0.16s;
    }

    &:nth-child(3) {
      animation-delay: 0s;
    }
  }
}

// Masonry grid animations
.masonry-item {
  animation: slideInFromLeft 0.2s ease-out both;
}

// Store header animations
.store-header {
  animation: slideInDown 0.6s ease-out;
}

.store-load-more {
  animation: fadeIn 0.5s ease-out;
}

// Responsive adjustments
@media (max-width: 768px) {
  .store-hero {
    padding: 60px 0;
  }

  .store-hero-title {
    font-size: 2.5rem;
  }

  .store-item-card {
    margin-bottom: 1rem;
  }

  .quantity-btn {
    width: 32px;
    height: 32px;
  }

  .quantity-display {
    min-width: 50px;
    padding: 6px 10px;
  }
}
